name: CI/CD Pipeline

on: 
  push:
    branches: [main]


jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  backend-setup:
    name: setup backend 
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
    
      - name: install dependance
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: set environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      - name: run migrations
        run: |
          python manage.py migrate


  docker-backend:
    name:  Dockerize Backend
    runs-on: ubuntu-latest
    needs: backend-setup
    steps:
      - uses: actions/checkout@v4
      - name: Build backend image

        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tp_automate:tagname .
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Push backend image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/tp_automate:tagname

  deploy-backend:
    name:  Deploy Backend
    runs-on: ubuntu-latest
    needs: docker-backend
    steps:
      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}